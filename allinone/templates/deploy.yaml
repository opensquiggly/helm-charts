apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  {{- if .Values.start }}
  replicas: 1
  {{- else -}}
  replicas: 0
  {{- end }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Release.Name }}               
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 30
      # nodeSelector:
      #   agentpool: apppool      
      initContainers:
      # Initialize the elasticsearch directory if it doesn't exist
      - name: create-elastic-folder
        image: busybox
        command: [ "sh", "-c", "mkdir -p /data/elasticsearch && chown -R 1000:1000 /data/elasticsearch" ]
        volumeMounts:
        - name: data
          mountPath: /data
      - name: create-mongo-folder
        image: busybox
        command: [ "sh", "-c", "mkdir -p /data/mongodb /data/mongodb/db /data/mongodb/logs && chown -R 1000:1000 /data/mongodb" ]
        volumeMounts:
        - name: data
          mountPath: /data
      containers:
      # OpenSquiggly container
      - name: opensquiggly
        image: docker.io/opensquiggly/opensquiggly:latest
        {{- if ne .Values.configSecretName "" }}
        env:
        - name: ConnectionStrings__AppConfig
          valueFrom:
            secretKeyRef:
              name: {{ .Values.configSecretName }}
              key: ConnectionStrings__AppConfig
              optional: true  
        - name: DatabaseOptions__ConnectionString
          valueFrom:
            secretKeyRef:
              name: {{ .Values.configSecretName }}
              key: DatabaseOptions__ConnectionString
              optional: true
        - name: DatabaseOptions__DatabaseName
          valueFrom:
            secretKeyRef:
              name: {{ .Values.configSecretName }}
              key: DatabaseOptions__DatabaseName
              optional: true               
        - name: UserKeyDatabaseOptions__ConnectionString
          valueFrom:
            secretKeyRef:
              name: {{ .Values.configSecretName }}
              key: DatabaseOptions__ConnectionString  
              optional: true                
        - name: UserKeyDatabaseOptions__DatabaseName
          valueFrom:
            secretKeyRef:
              name: {{ .Values.configSecretName }}
              key: UserKeyDatabaseOptions__DatabaseName
              optional: true            
        {{- end }}                  
        ports:
          - containerPort: 80
        volumeMounts:
        - name: data
          mountPath: /data          
      # ElasticSearch container
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
        env:
        - name: ES_JAVA_OPTS
          value: "-Xms{{ .Values.esMinHeapSize }} -Xmx{{ .Values.esMaxHeapSize }}"          
        volumeMounts:
        - name: data
          mountPath: /data
        - name: elasticsearch-config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml           
      # MongoDB container
      - name: mongodb
        image: mongo:5.0.3
        command: [ "mongod", "--dbpath", "/data/mongodb/db", "--logpath", "/data/mongodb/logs/mongod.log" ]
        env:
          - name: MONGO_DATA_DIR
            value: /data/mongodb/db
          - name: MONGO_LOG_DIR
            value: /data/mongodb/logs
        ports:
          - containerPort: 27017
        volumeMounts:
        - name: data
          mountPath: /data     
      volumes:
      - name: data
        persistentVolumeClaim:
          {{- if eq .Values.useExistingPvc "" }}
          claimName: {{ .Release.Name }}-pvc
          {{- else }}
          claimName: {{ .Values.useExistingPvc }}
          {{- end }}
      - name: elasticsearch-config
        configMap:
          name: {{ .Release.Name }}-elasticsearch-config          