{{- $diskSkuName := .Values.diskSkuName -}}
{{- $diskType := .Values.diskType -}}
{{- $provisioner := "" -}}
{{- if eq .Values.cloudType "azure" -}}
{{-   $provisioner = "disk.csi.azure.com" -}}
{{-   if eq $diskSkuName "" -}}
{{-     $diskSkuName = "Premium_LRS" -}}
{{-   end -}}
{{- else if eq .Values.cloudType "aws" -}}  
{{-   $provisioner = "ebs.csi.aws.com" -}}
{{- else if eq .Values.cloudType "linode" -}}  
{{-   $provisioner = "linodebs.csi.linode.com" -}}
{{- else if eq .Values.cloudType "digitalocean" -}}
{{-   $provisioner = "dobs.csi.digitalocean.com" -}}
{{- else if eq .Values.cloudType "google" -}}
{{-   $provisioner = "pd.csi.storage.gke.io" -}}
{{-   if eq $diskType "" -}}
{{-     $diskType = "pd-ssd" -}}
{{-   end -}}
{{- else if eq .Values.cloudType "minikube" -}}
{{-   $provisioner = "hostpath.csi.k8s.io" -}}
{{- else if eq .Values.cloudType "docker-desktop" -}}
{{-   $provisioner = "docker.io/hostpath" -}}
{{- end -}}
{{- if ne .Values.storageProvisioner "" -}}
{{-   $provisioner = .Values.storageProvisioner -}}
{{- end -}}
{{- if and (eq .Values.useExistingStorageClass "") (and (eq .Values.useExistingPvc "") (eq .Values.useExistingPv "")) -}}
{{- if eq $provisioner "" -}}
{{-   (print "\nStorage provisioner not supplied" "\nSpecify a known cloudType or else specify storageProvisioner") | fail -}}
{{- end -}}
apiVersion: storage.k8s.io/v1
kind: StorageClass
allowVolumeExpansion: true
metadata:
  {{- if eq .Values.cloudType "azure" }}
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    kubernetes.io/cluster-service: "true"
  {{- end }}
  name: {{ .Release.Name }}-storageclass
parameters:
  {{- if ne $diskSkuName "" }}
  skuname: {{ $diskSkuName }}
  {{- end }}
  {{- if ne $diskType "" }}
  type: {{ $diskType }}
  {{- end }}
provisioner: {{ $provisioner }}
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer
{{- end -}}